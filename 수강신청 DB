학생 테이블
create table tb_student( 
  no    char(5) primary key 
  ,name   varchar(20) not null 
  ,email   varchar(50) not null 
  ,address varchar(20) not null 
  ,phone   varchar(20)  
  ,regdt   date default sysdate 
);

행 추가
insert into tb_student(no, uname, email, address, phone) 
values('201633035','한천오','han103903@naver.com','속초','010-2887-9798');

과목테이블
create table tb_gwamok( 
  code    char(5)     primary key      --과목코드 
  ,name   varchar(20) not null         --과목명 
  ,hakjum number(2)   default 1        --학점 
  ,redgt   date        default sysdate  --일자 
);

행 추가
insert into tb_gwamok(gcode, gname, ghakjum) 
values('p001','DB',3); 

수강테이블 
create table tb_sugang( 
  sno      number  --일련번호  
  ,no   char(5) --학번 
  ,code   char(5) --과목코드 
  ,primary key(sno) 
  ,foreign key(no) references tb_student(no) 
  ,foreign key(code) references tb_gwamok(code) 
);

수강테이블 일련번호 시퀀스 생성
create sequence sugang_seq;

행 추가 
insert into tb_sugang(sno, no, code) 
values(sugang_seq.nextval, '201633035', 'p001'); 

서로의 테이블 연결 (JOIN) 하기
  - 수강테이블 & 학생테이블
(select tb_sugang.hakno, tb_sugang.gcode, tb_student.uname 
from tb_sugang join tb_student 
on tb_sugang.hakno=tb_student.hakno;)
alias (as 별칭) 을 줘서 테이블 이름 간단히 하기
테이블 명을 각각 SU, STU적어주어 간단히 했다.
select SU.hakno, SU.gcode, STU.uname 
from tb_sugang SU join tb_student STU 
on SU.hakno=STU.hakno;
  - 수강테이블 & 과목테이블 
select SU.hakno, SU.gcode, GW.ghakjum 
from tb_sugang SU join tb_gwamok GW 
on SU.gcode=GW.gcode;
수강테이블을 기준으로 학생테이블 & 과목테이블 조인
수강테이블과 먼저 연결되는 학생을 조인한 후 과목을 조인한다.
select SU.hakno, SU.gcode, STU.uname, GW.gname, GW.ghakjum 
from tb_sugang SU join tb_student STU 
on SU.hakno=STU.hakno join tb_gwamok GW 
on SU.gcode=GW.gcode;
